worker_processes ${{NUM_WORKERS}};
error_log ${{NOTICE_LOG}} notice;
daemon ${{DAEMON}};

pcre_jit on;

events {
  worker_connections 1024;
}

http {
  more_set_headers 'Server: lapis';
  proxy_cache_path ../luarocks-pagecache levels=1:2 keys_zone=pagecache:100m max_size=1g inactive=2h use_temp_path=off;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Frame-Options deny;

  server {
    client_max_body_size 15m;
    listen ${{PORT}};
    lua_code_cache ${{CODE_CACHE}};

    include nginx/http_proxy.conf;

    location / {
      if ($host = rocks.moonscript.org) {
        rewrite ^/(?!api) $scheme://luarocks.org$request_uri permanent;
      }

      default_type text/html;
      set $_url "";
      content_by_lua "require('lapis').serve('app')";
    }

    location ~ ^/manifest([-.].+)?$ {
      echo hello world;
    }

    location ~ /manifests/([^/]*)/(.+) {
      default_type text/x-lua;

      rewrite_by_lua_file "serve_file.lua";
      resolver 8.8.8.8;
      proxy_http_version 1.1;
      proxy_hide_header 'Content-Type';
      proxy_pass $_url;
    }

    location ~ ^/(?:dev/)?([^/]*?\.(?:rock|rockspec))$ {
      default_type text/x-lua;

      rewrite_by_lua_file "serve_file.lua";
      resolver 8.8.8.8;
      proxy_http_version 1.1;
      proxy_pass $_url;
    }

    location /static/ {
      include mime.types;
      access_log off;
      gzip on;
      gzip_types application/x-javascript text/css image/svg+xml;
      alias static/;
    }

    location /favicon.ico {
      include mime.types;
      alias static/favicon.ico;
    }

    # redirect old luarocks wiki links to github
    location ~ ^/en\b(?<wikipath>.*) {
      rewrite_by_lua "
        local path = ngx.var.wikipath:gsub('_', '-')
        if ngx.var.args then
          path = path .. '?' .. ngx.var.args
        end
        return ngx.redirect('https://github.com/luarocks/luarocks/wiki' .. path)
      ";
    }

    # redirect old luarocks repository links
    location /repositories/ {
      rewrite ^/repositories/rocks-scm$ https://luarocks.org//m/root/development-only permanent;
      rewrite ^/repositories/rocks-scm(.+)$ https://luarocks.org/dev$1 permanent;
      rewrite ^/repositories/rocks$ https://luarocks.org/m/root permanent;
      rewrite ^/repositories/rocks(.+)$ https://luarocks.org$1 permanent;
    }

    # redirect old luarocks releases links
    location /releases {
      rewrite ^/releases(.*$) https://luarocks.github.io/luarocks/releases$1 redirect;
    }

    location /doc/history.pdf {
      rewrite . https://hisham.hm/papers/muhammad_2013_history.pdf redirect;
    }
  }

  # www redirect server
  server {
    listen ${{PORT}};
    server_name ~^www\.(?<domain>.*)$;

    location / {
      rewrite ^ $scheme://$domain$request_uri permanent;
    }
  }

  # # rocks.moonscript.org redirect server
  # server {
    #   listen ${{PORT}};
    #   server_name rocks.moonscript.org;

    #   location / {
      #       rewrite ^ $scheme://luarocks.org$request_uri permanent;
      #   }
    # }
}
